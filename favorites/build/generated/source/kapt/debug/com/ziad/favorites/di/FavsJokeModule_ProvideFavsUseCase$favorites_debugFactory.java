// Generated by Dagger (https://dagger.dev).
package com.ziad.favorites.di;

import com.ziad.favorites.domain.repo.FavJokesRepository;
import com.ziad.favorites.domain.usecases.GetFavsJokesUseCase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavsJokeModule_ProvideFavsUseCase$favorites_debugFactory implements Factory<GetFavsJokesUseCase> {
  private final FavsJokeModule module;

  private final Provider<FavJokesRepository> favsRepoProvider;

  public FavsJokeModule_ProvideFavsUseCase$favorites_debugFactory(FavsJokeModule module,
      Provider<FavJokesRepository> favsRepoProvider) {
    this.module = module;
    this.favsRepoProvider = favsRepoProvider;
  }

  @Override
  public GetFavsJokesUseCase get() {
    return provideFavsUseCase$favorites_debug(module, favsRepoProvider.get());
  }

  public static FavsJokeModule_ProvideFavsUseCase$favorites_debugFactory create(
      FavsJokeModule module, Provider<FavJokesRepository> favsRepoProvider) {
    return new FavsJokeModule_ProvideFavsUseCase$favorites_debugFactory(module, favsRepoProvider);
  }

  public static GetFavsJokesUseCase provideFavsUseCase$favorites_debug(FavsJokeModule instance,
      FavJokesRepository favsRepo) {
    return Preconditions.checkNotNull(instance.provideFavsUseCase$favorites_debug(favsRepo), "Cannot return null from a non-@Nullable @Provides method");
  }
}
