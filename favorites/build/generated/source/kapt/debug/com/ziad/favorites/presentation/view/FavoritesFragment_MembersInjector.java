// Generated by Dagger (https://dagger.dev).
package com.ziad.favorites.presentation.view;

import com.ziad.common_di.ViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavoritesFragment_MembersInjector implements MembersInjector<FavoritesFragment> {
  private final Provider<FavsJokesPresenter> mPresenterFavsProvider;

  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  public FavoritesFragment_MembersInjector(Provider<FavsJokesPresenter> mPresenterFavsProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    this.mPresenterFavsProvider = mPresenterFavsProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<FavoritesFragment> create(
      Provider<FavsJokesPresenter> mPresenterFavsProvider,
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    return new FavoritesFragment_MembersInjector(mPresenterFavsProvider, viewModelFactoryProvider);}

  @Override
  public void injectMembers(FavoritesFragment instance) {
    injectMPresenterFavs(instance, mPresenterFavsProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.ziad.favorites.presentation.view.FavoritesFragment.mPresenterFavs")
  public static void injectMPresenterFavs(FavoritesFragment instance,
      FavsJokesPresenter mPresenterFavs) {
    instance.mPresenterFavs = mPresenterFavs;
  }

  @InjectedFieldSignature("com.ziad.favorites.presentation.view.FavoritesFragment.viewModelFactory")
  public static void injectViewModelFactory(FavoritesFragment instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
