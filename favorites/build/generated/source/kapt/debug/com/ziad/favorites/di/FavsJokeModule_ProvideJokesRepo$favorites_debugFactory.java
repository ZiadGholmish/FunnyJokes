// Generated by Dagger (https://dagger.dev).
package com.ziad.favorites.di;

import com.ziad.db.repo.interfaces.FavoritesJokesRepo;
import com.ziad.favorites.domain.repo.FavJokesRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavsJokeModule_ProvideJokesRepo$favorites_debugFactory implements Factory<FavJokesRepository> {
  private final FavsJokeModule module;

  private final Provider<FavoritesJokesRepo> favoritesJokesRepoProvider;

  public FavsJokeModule_ProvideJokesRepo$favorites_debugFactory(FavsJokeModule module,
      Provider<FavoritesJokesRepo> favoritesJokesRepoProvider) {
    this.module = module;
    this.favoritesJokesRepoProvider = favoritesJokesRepoProvider;
  }

  @Override
  public FavJokesRepository get() {
    return provideJokesRepo$favorites_debug(module, favoritesJokesRepoProvider.get());
  }

  public static FavsJokeModule_ProvideJokesRepo$favorites_debugFactory create(FavsJokeModule module,
      Provider<FavoritesJokesRepo> favoritesJokesRepoProvider) {
    return new FavsJokeModule_ProvideJokesRepo$favorites_debugFactory(module, favoritesJokesRepoProvider);
  }

  public static FavJokesRepository provideJokesRepo$favorites_debug(FavsJokeModule instance,
      FavoritesJokesRepo favoritesJokesRepo) {
    return Preconditions.checkNotNull(instance.provideJokesRepo$favorites_debug(favoritesJokesRepo), "Cannot return null from a non-@Nullable @Provides method");
  }
}
