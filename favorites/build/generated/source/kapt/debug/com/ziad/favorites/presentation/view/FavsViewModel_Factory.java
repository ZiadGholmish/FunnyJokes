// Generated by Dagger (https://dagger.dev).
package com.ziad.favorites.presentation.view;

import com.ziad.favorites.domain.usecases.FavJokeUseCase;
import com.ziad.favorites.domain.usecases.GetFavsJokesUseCase;
import com.ziad.favorites.domain.usecases.UnFavJokeUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavsViewModel_Factory implements Factory<FavsViewModel> {
  private final Provider<GetFavsJokesUseCase> favsJokesUseCaseProvider;

  private final Provider<FavJokeUseCase> favJokeUseCaseProvider;

  private final Provider<UnFavJokeUseCase> unFavJokeUseCaseProvider;

  public FavsViewModel_Factory(Provider<GetFavsJokesUseCase> favsJokesUseCaseProvider,
      Provider<FavJokeUseCase> favJokeUseCaseProvider,
      Provider<UnFavJokeUseCase> unFavJokeUseCaseProvider) {
    this.favsJokesUseCaseProvider = favsJokesUseCaseProvider;
    this.favJokeUseCaseProvider = favJokeUseCaseProvider;
    this.unFavJokeUseCaseProvider = unFavJokeUseCaseProvider;
  }

  @Override
  public FavsViewModel get() {
    return newInstance(favsJokesUseCaseProvider.get(), favJokeUseCaseProvider.get(), unFavJokeUseCaseProvider.get());
  }

  public static FavsViewModel_Factory create(Provider<GetFavsJokesUseCase> favsJokesUseCaseProvider,
      Provider<FavJokeUseCase> favJokeUseCaseProvider,
      Provider<UnFavJokeUseCase> unFavJokeUseCaseProvider) {
    return new FavsViewModel_Factory(favsJokesUseCaseProvider, favJokeUseCaseProvider, unFavJokeUseCaseProvider);
  }

  public static FavsViewModel newInstance(GetFavsJokesUseCase favsJokesUseCase,
      FavJokeUseCase favJokeUseCase, UnFavJokeUseCase unFavJokeUseCase) {
    return new FavsViewModel(favsJokesUseCase, favJokeUseCase, unFavJokeUseCase);
  }
}
