// Generated by Dagger (https://dagger.dev).
package com.ziad.all_jokes.presentation.view;

import com.ziad.all_jokes.domain.usecases.FavJokeUseCase;
import com.ziad.all_jokes.domain.usecases.GetAllJokesUseCase;
import com.ziad.all_jokes.domain.usecases.UnFavJokeUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class JokesVM_Factory implements Factory<JokesVM> {
  private final Provider<GetAllJokesUseCase> getAllJokesUseCaseProvider;

  private final Provider<FavJokeUseCase> favJokeUseCaseProvider;

  private final Provider<UnFavJokeUseCase> unFavJokeUseCaseProvider;

  public JokesVM_Factory(Provider<GetAllJokesUseCase> getAllJokesUseCaseProvider,
      Provider<FavJokeUseCase> favJokeUseCaseProvider,
      Provider<UnFavJokeUseCase> unFavJokeUseCaseProvider) {
    this.getAllJokesUseCaseProvider = getAllJokesUseCaseProvider;
    this.favJokeUseCaseProvider = favJokeUseCaseProvider;
    this.unFavJokeUseCaseProvider = unFavJokeUseCaseProvider;
  }

  @Override
  public JokesVM get() {
    return newInstance(getAllJokesUseCaseProvider.get(), favJokeUseCaseProvider.get(), unFavJokeUseCaseProvider.get());
  }

  public static JokesVM_Factory create(Provider<GetAllJokesUseCase> getAllJokesUseCaseProvider,
      Provider<FavJokeUseCase> favJokeUseCaseProvider,
      Provider<UnFavJokeUseCase> unFavJokeUseCaseProvider) {
    return new JokesVM_Factory(getAllJokesUseCaseProvider, favJokeUseCaseProvider, unFavJokeUseCaseProvider);
  }

  public static JokesVM newInstance(GetAllJokesUseCase getAllJokesUseCase,
      FavJokeUseCase favJokeUseCase, UnFavJokeUseCase unFavJokeUseCase) {
    return new JokesVM(getAllJokesUseCase, favJokeUseCase, unFavJokeUseCase);
  }
}
